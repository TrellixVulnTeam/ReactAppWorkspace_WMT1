{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\BITS\\\\Web development\\\\Assignment2\\\\LMS_React_App\\\\src\\\\components\\\\createModule.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport { getUser } from './Common';\nimport './dashboard.css';\n\nclass createModule extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchServices = e => {\n      let obj = JSON.parse(e.target.value);\n      this.setState({\n        selectedCityid: obj.key,\n        selectedCity: obj.value,\n        validationError: e.target.value === \"\" ? \"You must select your city\" : \"\"\n      });\n      fetch(\"http://localhost:8000/api/core/cities/services\").then(response => {\n        return response.json();\n      }).then(data => {\n        let cityservicelist = data.filter(service => {\n          if (service.city_id === this.state.selectedCityid) return service;else return false;\n        }).map(service => {\n          return {\n            cityid: service.city_id,\n            servicename: service.service_id,\n            subservicename: service.subservice_id\n          };\n        });\n        this.setState({\n          services: [{\n            cityid: '',\n            servicename: '(Select the Service)',\n            subservicename: 'Select the subservice'\n          }].concat(cityservicelist)\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.ChangeService = e => {\n      let obj = JSON.parse(e.target.value);\n      console.log(\"serverice\" + obj.key + obj.value);\n      this.setState({\n        selectedserviceid: obj.key,\n        selectedservice: obj.value,\n        validationError: e.target.value === \"\" ? \"You must select service\" : \"\"\n      });\n    };\n\n    this.ChangesubService = e => {\n      let obj = JSON.parse(e.target.value);\n      this.setState({\n        selectedsubserviceid: obj.key,\n        selectedsubservice: obj.value,\n        validationError: e.target.value === \"\" ? \"You must select sub service\" : \"\"\n      });\n    };\n\n    this.onChangedate = e => {\n      let start_date = e.target.value;\n      e.target.value = start_date;\n      this.setState({\n        start_date: start_date\n      });\n      e.preventDefault();\n    };\n\n    this.onChangetime = e => {\n      let start_time = e.target.value;\n      e.target.value = start_time;\n      this.setState({\n        start_time: start_time\n      });\n      e.preventDefault();\n    };\n\n    this.handleSubmit = e => {\n      alert(\"Created Successfully!\");\n    };\n\n    this.state = {\n      cities: [],\n      selectedCity: '',\n      selectedCityid: '',\n      services: [],\n      selectedservice: '',\n      selectedserviceid: '',\n      selectedsubservice: '',\n      selectedsubserviceid: '',\n      start_date: \"\",\n      start_time: \" \",\n      date: new Date()\n    };\n  }\n  /*fetch cities*/\n\n\n  componentDidMount() {\n    fetch(\"http://localhost:8000/api/core/cities\").then(response => {\n      return response.json();\n    }).then(data => {\n      let citiesFromApi = data.map(city => {\n        return {\n          id: city.id,\n          name: city.name\n        };\n      });\n      this.setState({\n        cities: [{\n          id: '',\n          name: '(Select your City)'\n        }].concat(citiesFromApi)\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \" Create Module\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          name: \"ModuleDetails\",\n          onSubmit: this.handleSubmit,\n          method: \"post\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: this.fetchServices,\n            children: this.state.cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: JSON.stringify({\n                key: city.id,\n                value: city.name\n              }),\n              children: city.name\n            }, city.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 48\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: this.ChangeService,\n            children: this.state.services.map(service => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: JSON.stringify({\n                key: service.servicename,\n                value: service.servicename\n              }),\n              children: service.servicename\n            }, service.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 53\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: this.state.selectedsubService,\n            onChange: this.ChangesubService,\n            children: this.state.services.map(service => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: JSON.stringify({\n                key: service.subservicename,\n                value: service.subservicename\n              }),\n              children: service.subservicename\n            }, service.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 53\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: \"red\",\n              marginTop: \"5px\"\n            },\n            children: this.state.validationError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"description\",\n            value: this.state.description,\n            placeholder: \"Description\",\n            maxLength: 1155,\n            onChange: this.handleUserInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              id: \"start\",\n              name: \"trip-start\",\n              onChange: this.onChangedate,\n              value: this.state.start_date,\n              min: \"2018-01-01\",\n              max: \"2028-12-31\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"time\",\n              id: \"appt\",\n              name: \"appt\",\n              onChange: this.onChangetime,\n              value: this.state.start_time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 14\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default withRouter(createModule);","map":{"version":3,"sources":["D:/BITS/Web development/Assignment2/LMS_React_App/src/components/createModule.js"],"names":["React","withRouter","axios","getUser","createModule","Component","constructor","props","fetchServices","e","obj","JSON","parse","target","value","setState","selectedCityid","key","selectedCity","validationError","fetch","then","response","json","data","cityservicelist","filter","service","city_id","state","map","cityid","servicename","service_id","subservicename","subservice_id","services","concat","catch","error","console","log","ChangeService","selectedserviceid","selectedservice","ChangesubService","selectedsubserviceid","selectedsubservice","onChangedate","start_date","preventDefault","onChangetime","start_time","handleSubmit","alert","cities","date","Date","componentDidMount","citiesFromApi","city","id","name","render","stringify","selectedsubService","color","marginTop","description","handleUserInput"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport { getUser } from './Common';\nimport './dashboard.css';\nclass createModule extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cities: [],\n      selectedCity: '',\n      selectedCityid: '',\n      services: [],\n      selectedservice: '',\n      selectedserviceid: '',\n      selectedsubservice: '',\n      selectedsubserviceid: '',\n      start_date: \"\",\n      start_time: \" \",\n      date: new Date()\n    };\n  }\n\n  /*fetch cities*/\n  componentDidMount() {\n\n    fetch(\"http://localhost:8000/api/core/cities\")\n      .then((response) => {\n        return response.json();\n      })\n      .then(data => {\n        let citiesFromApi = data.map((city) => {\n          return { id: city.id, name: city.name }\n        });\n        this.setState({\n          cities: [{ id: '', name: '(Select your City)', }].concat(citiesFromApi)\n        });\n        \n      }).catch(error => {\n        console.log(error);\n      });\n  }\n\n  fetchServices=(e)=> {\n\n    let obj = JSON.parse(e.target.value)  \n    this.setState({\n      selectedCityid: obj.key,\n      selectedCity: obj.value,\n      validationError:\n        e.target.value === \"\"\n          ? \"You must select your city\"\n          : \"\"\n    })\n    fetch(\"http://localhost:8000/api/core/cities/services\")\n      .then((response) => {\n        return response.json();\n      })\n      .then(data => {\n        \n        let cityservicelist = data.filter((service) => {\n          if (service.city_id === this.state.selectedCityid)\n            return service\n          else\n          return false\n        }).map((service) => {\n          return { cityid: service.city_id, servicename: service.service_id, subservicename: service.subservice_id }\n        })\n       \n        this.setState({\n          services: [{ cityid: '', servicename: '(Select the Service)', subservicename: 'Select the subservice' }].concat(cityservicelist)\n        });\n        \n      }).catch(error => {\n        console.log(error);\n      });\n  }\n\n\n  ChangeService = (e) => {\n    let obj = JSON.parse(e.target.value) \n    console.log(\"serverice\"+obj.key+obj.value);\n    this.setState({\n      selectedserviceid: obj.key,\n      selectedservice: obj.value,\n      validationError:\n        e.target.value === \"\"\n          ? \"You must select service\"\n          : \"\"\n    });\n\n  }\n  ChangesubService = (e) => {\n    let obj = JSON.parse(e.target.value) \n    this.setState({\n      selectedsubserviceid: obj.key,\n      selectedsubservice: obj.value,\n      validationError:\n        e.target.value === \"\"\n          ? \"You must select sub service\"\n          : \"\"\n    });\n\n  }\n\n  onChangedate = (e) => {\n\n    let start_date = e.target.value;\n    e.target.value=start_date;    \n    this.setState({ start_date: start_date });   \n    e.preventDefault();\n  }\n  \n  onChangetime = (e) => {\n    let start_time = e.target.value;\n    e.target.value=start_time;\n    this.setState({ start_time: start_time });\n     e.preventDefault();\n  }\n  \n  handleSubmit = (e) => {\n    alert(\"Created Successfully!\");\n  }\n  render() {\n    return (\n      <div>\n        <fieldset>\n          <legend> Create Module</legend>\n          <form\n            name=\"ModuleDetails\"\n            onSubmit={this.handleSubmit}\n            method=\"post\"\n          >\n            <select\n              onChange={this.fetchServices}\n            >\n              {this.state.cities.map((city) => <option key={city.id} value={JSON.stringify({key:city.id, value:city.name})}>{city.name}</option>)}\n            </select>\n            <br />\n            <select\n              onChange={this.ChangeService}\n            >\n              {this.state.services.map((service) => <option key={service.id} value={JSON.stringify({key:service.servicename, value:service.servicename})}>{service.servicename}</option>)}\n            </select>\n            <br />\n            <select\n              value={this.state.selectedsubService}\n              onChange={this.ChangesubService}\n            >\n              {this.state.services.map((service) => <option key={service.id} value={JSON.stringify({key:service.subservicename, value:service.subservicename})}>{service.subservicename}</option>)}\n            </select>\n            <div\n              style={{\n                color: \"red\",\n                marginTop: \"5px\"\n              }}\n            >\n              {this.state.validationError}\n            </div>\n            <input type='text'\n              name='description'\n              value={this.state.description}\n              placeholder=\"Description\"\n              maxLength={1155}\n              onChange={this.handleUserInput}\n\n            />\n            <div>\n                <input type=\"date\" id=\"start\" name=\"trip-start\"\n                onChange={this.onChangedate}\n                value={this.state.start_date}\n                min=\"2018-01-01\" max=\"2028-12-31\"></input>\n             <input type=\"time\" id=\"appt\" name=\"appt\"\n             onChange={this.onChangetime}\n             value={this.state.start_time}\n             ></input>\n            </div>\n            <br />\n            <input type='submit' value='Submit' />\n\n          </form>\n        </fieldset>\n      </div>\n    );\n  }\n \n}\n\nexport default withRouter(createModule);"]},"metadata":{},"sourceType":"module"}