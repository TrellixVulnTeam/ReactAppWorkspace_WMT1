{"ast":null,"code":"'use strict';\n\nvar axios = require('axios');\n\nvar isAbsoluteURL = require('axios/lib/helpers/isAbsoluteURL');\n\nvar buildURL = require('axios/lib/helpers/buildURL');\n\nvar combineURLs = require('axios/lib/helpers/combineURLs');\n\nvar axiosDebug = require('debug')('axios');\n\nvar URL_KEY = '__AXIOS-DEBUG-LOG_URL__';\n\nfunction getURL(config) {\n  var url = config.url;\n\n  if (config.baseURL && !isAbsoluteURL(url)) {\n    url = combineURLs(config.baseURL, url);\n  }\n\n  return buildURL(url, config.params, config.paramsSerializer);\n}\n\nvar options = {\n  request: function (debug, config) {\n    var url = getURL(config);\n    Object.defineProperty(config, URL_KEY, {\n      value: url\n    });\n    debug(config.method.toUpperCase() + ' ' + url);\n  },\n  response: function (debug, response) {\n    var url = response.config[URL_KEY];\n    debug(response.status + ' ' + response.statusText, '(' + response.config.method.toUpperCase() + ' ' + url + ')');\n  },\n  error: function (debug, error) {\n    if (error.config) {\n      var url = error.config[URL_KEY];\n      debug(error.name + ': ' + error.message, '(' + error.config.method.toUpperCase() + ' ' + url + ')');\n    } else {\n      debug(error.name + ': ' + error.message);\n    }\n  }\n};\n\nfunction addLogger(instance, debug) {\n  if (debug === undefined) debug = axiosDebug;\n  instance.interceptors.request.use(function (config) {\n    options.request(debug, config);\n    return config;\n  });\n  instance.interceptors.response.use(function (response) {\n    options.response(debug, response);\n    return response;\n  }, function (error) {\n    options.error(debug, error);\n    throw error;\n  });\n}\n\naddLogger(axios);\n\naxios.create = function (originalCreate) {\n  return function create() {\n    var instance = originalCreate.apply(this, arguments);\n    addLogger(instance);\n    return instance;\n  };\n}(axios.create);\n\nexports = module.exports = function (userOptions) {\n  for (var key in options) {\n    if (key in userOptions) {\n      options[key] = userOptions[key];\n    }\n  }\n};\n\nexports.addLogger = addLogger;","map":{"version":3,"sources":["D:/BITS/Web development/CodeBase/ReactAppWorkspace/node_modules/axios-debug-log/index.js"],"names":["axios","require","isAbsoluteURL","buildURL","combineURLs","axiosDebug","URL_KEY","getURL","config","url","baseURL","params","paramsSerializer","options","request","debug","Object","defineProperty","value","method","toUpperCase","response","status","statusText","error","name","message","addLogger","instance","undefined","interceptors","use","create","originalCreate","apply","arguments","exports","module","userOptions","key"],"mappings":"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","sourcesContent":["'use strict'\n\nvar axios = require('axios')\nvar isAbsoluteURL = require('axios/lib/helpers/isAbsoluteURL')\nvar buildURL = require('axios/lib/helpers/buildURL')\nvar combineURLs = require('axios/lib/helpers/combineURLs')\nvar axiosDebug = require('debug')('axios')\n\nvar URL_KEY = '__AXIOS-DEBUG-LOG_URL__'\n\nfunction getURL (config) {\n  var url = config.url\n  if (config.baseURL && !isAbsoluteURL(url)) {\n    url = combineURLs(config.baseURL, url)\n  }\n  return buildURL(url, config.params, config.paramsSerializer)\n}\n\nvar options = {\n  request: function (debug, config) {\n    var url = getURL(config)\n    Object.defineProperty(config, URL_KEY, { value: url })\n    debug(\n      config.method.toUpperCase() + ' ' + url\n    )\n  },\n  response: function (debug, response) {\n    var url = response.config[URL_KEY]\n    debug(\n      response.status + ' ' + response.statusText,\n      '(' + response.config.method.toUpperCase() + ' ' + url + ')'\n    )\n  },\n  error: function (debug, error) {\n    if (error.config) {\n      var url = error.config[URL_KEY]\n      debug(\n        error.name + ': ' + error.message,\n        '(' + error.config.method.toUpperCase() + ' ' + url + ')'\n      )\n    } else {\n      debug(error.name + ': ' + error.message)\n    }\n  }\n}\n\nfunction addLogger (instance, debug) {\n  if (debug === undefined) debug = axiosDebug\n  instance.interceptors.request.use(function (config) {\n    options.request(debug, config)\n    return config\n  })\n  instance.interceptors.response.use(function (response) {\n    options.response(debug, response)\n    return response\n  }, function (error) {\n    options.error(debug, error)\n    throw error\n  })\n}\n\naddLogger(axios)\n\naxios.create = (function (originalCreate) {\n  return function create () {\n    var instance = originalCreate.apply(this, arguments)\n    addLogger(instance)\n    return instance\n  }\n})(axios.create)\n\nexports = module.exports = function (userOptions) {\n  for (var key in options) {\n    if (key in userOptions) {\n      options[key] = userOptions[key]\n    }\n  }\n}\n\nexports.addLogger = addLogger\n"]},"metadata":{},"sourceType":"script"}