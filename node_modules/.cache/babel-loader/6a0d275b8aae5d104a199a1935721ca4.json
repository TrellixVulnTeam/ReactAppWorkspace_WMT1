{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\BITS\\\\Web development\\\\Assignment2\\\\LMS_React_App\\\\src\\\\components\\\\newjobs.js\";\nimport React from 'react';\nimport \"./bookings.css\";\nimport { getUser } from './Common';\nimport { RenderRow } from './jobs';\nimport axios from 'axios';\nexport default class Newjobs extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getKeys = function () {\n      return Object.keys(this.state.jobsdata[0]);\n    };\n\n    this.getHeader = function () {\n      var keys = this.getKeys();\n      return keys.map((key, index) => {\n        return /*#__PURE__*/_jsxDEV(\"th\", {\n          children: key.toUpperCase()\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 14\n        }, this);\n      });\n    };\n\n    this.getRowsData = function () {\n      var items = this.props.jobsdata;\n      var keys = this.getKeys();\n      return items.map((row, index) => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(RenderRow, {\n            data: row,\n            keys: keys\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 30\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 14\n        }, this);\n      });\n    };\n\n    this.state = {\n      jobsdata: [{\n        jobid: \"-1\",\n        servicename: \"\",\n        expertname: \"\",\n        customername: \"\",\n        date: \"\",\n        time: \"\",\n        jobstatus: \"\",\n        paymentstatus: \"-1\"\n      }]\n    };\n    this.getHeader = this.getHeader.bind(this);\n    this.getRowsData = this.getRowsData.bind(this);\n    this.getKeys = this.getKeys.bind(this);\n  }\n\n  fetchdata() {\n    var apiBaseUrl = \"http://localhost:8000/api/core/jobs/jobs_filters?\";\n\n    if (this.props.status === \"initiated\") {\n      apiBaseUrl = apiBaseUrl + \"service_status=initiated\";\n    }\n\n    fetch(apiBaseUrl).then(response => {\n      return response.json();\n    }).then(data => {\n      let jobsfromapi = data.map(job => {\n        return {\n          jobid: job.id,\n          servicename: job.service_id,\n          expertname: job.expert_id,\n          customername: job.cust_id,\n          date: job.start_date,\n          time: job.start_time,\n          jobstatus: job.job_status,\n          paymentstatus: job.payment_id\n        };\n      });\n      this.setState({\n        jobsdata: this.state.jobsdata.concat(jobsfromapi)\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  componentDidMount() {\n    this.fetchdata();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.jobsdata !== this.state.jobsdata) {\n      console.log('state has changed.');\n    }\n  }\n\n  handleClick(index) {\n    const user = getUser();\n    var payload = {\n      \"cust_id\": this.state.jobsdata[index].customername,\n      \"expert_id\": user.id,\n      \"start_date\": this.state.jobsdata[index].date,\n      \"start_time\": this.state.jobsdata[index].time,\n      \"job_status\": \"Active\"\n    };\n    var jobid = this.state.jobsdata[index].jobid;\n    var apiBaseUrl = \"http://localhost:8000/api/core/jobs/\" + jobid;\n    var self = this;\n    axios.put(apiBaseUrl, payload).then(function (response) {\n      console.log(response);\n\n      if (response.status === 200) {\n        console.log(\"Job updated successfully\");\n        alert(\"Job update Successfully\");\n        let newState = Object.assign({}, self.state);\n        delete newState.jobsdata[index];\n        self.setState(newState);\n      } else if (response.data.code === 204) {\n        console.log(\"Servie not updated\");\n        alert(\"Servie not updated\");\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    var info = this.state.jobsdata;\n    var keys = this.getKeys();\n    var items = info.map((row, index) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(RenderRow, {\n          data: row,\n          keys: keys\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.handleClick(index),\n            children: \"Accept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 14\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bookingslist\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Service Available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: this.getHeader()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: items\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/BITS/Web development/Assignment2/LMS_React_App/src/components/newjobs.js"],"names":["React","getUser","RenderRow","axios","Newjobs","Component","constructor","props","getKeys","Object","keys","state","jobsdata","getHeader","map","key","index","toUpperCase","getRowsData","items","row","jobid","servicename","expertname","customername","date","time","jobstatus","paymentstatus","bind","fetchdata","apiBaseUrl","status","fetch","then","response","json","data","jobsfromapi","job","id","service_id","expert_id","cust_id","start_date","start_time","job_status","payment_id","setState","concat","catch","error","console","log","componentDidMount","componentDidUpdate","prevProps","prevState","handleClick","user","payload","self","put","alert","newState","assign","code","render","info"],"mappings":"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","sourcesContent":["import React from 'react';\nimport \"./bookings.css\";\nimport { getUser } from './Common';\nimport { RenderRow } from './jobs';\nimport axios from 'axios';\n\nexport default class Newjobs extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      jobsdata: [{\n        jobid: \"-1\",\n        servicename: \"\",\n        expertname: \"\",\n        customername: \"\",\n        date: \"\",\n        time: \"\",\n        jobstatus: \"\",\n        paymentstatus: \"-1\"\n      }],\n\n    }\n    this.getHeader = this.getHeader.bind(this);\n    this.getRowsData = this.getRowsData.bind(this);\n    this.getKeys = this.getKeys.bind(this);\n\n  }\n\n  fetchdata() {\n\n    var apiBaseUrl = \"http://localhost:8000/api/core/jobs/jobs_filters?\"\n    if (this.props.status === \"initiated\") {\n\n      apiBaseUrl = apiBaseUrl + \"service_status=initiated\";\n\n    }\n    fetch(apiBaseUrl)\n      .then((response) => {\n        return response.json();\n      })\n      .then(data => {\n        let jobsfromapi = data.map((job) => {\n          return {\n            jobid: job.id,\n            servicename: job.service_id,\n            expertname: job.expert_id,\n            customername: job.cust_id,\n            date: job.start_date,\n            time: job.start_time,\n            jobstatus: job.job_status,\n            paymentstatus: job.payment_id,\n          }\n        });\n\n        this.setState({ jobsdata: this.state.jobsdata.concat(jobsfromapi) });\n\n      }).catch(error => {\n        console.log(error);\n      });\n  }\n  componentDidMount() {\n    this.fetchdata();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.jobsdata !== this.state.jobsdata) {\n\n      console.log('state has changed.');\n    }\n\n  }\n  getKeys = function () {\n    return Object.keys(this.state.jobsdata[0]);\n  }\n\n  getHeader = function () {\n    var keys = this.getKeys();\n\n    return keys.map((key, index) => {\n      return <th key={key}>{key.toUpperCase()}</th>\n    }\n    )\n  }\n\n  getRowsData = function () {\n    var items = this.props.jobsdata;\n    \n    var keys = this.getKeys();\n    return items.map((row, index) => {\n      return <tr key={index}><RenderRow key={index} data={row} keys={keys} /></tr>\n    })\n  }\n\n  handleClick(index) {\n    \n    const user = getUser();\n\n    var payload = {\n      \"cust_id\": this.state.jobsdata[index].customername,\n      \"expert_id\": user.id,\n      \"start_date\": this.state.jobsdata[index].date,\n      \"start_time\": this.state.jobsdata[index].time,\n      \"job_status\": \"Active\"\n    }\n    \n    var jobid = this.state.jobsdata[index].jobid;\n    var apiBaseUrl = \"http://localhost:8000/api/core/jobs/\" + jobid;\n    var self = this;\n    axios.put(apiBaseUrl, payload)\n      .then(function (response) {\n        console.log(response);\n\n        if (response.status === 200) {\n          console.log(\"Job updated successfully\");\n          alert(\"Job update Successfully\");\n          \n\n          let newState = Object.assign({}, self.state);\n          delete newState.jobsdata[index];\n          self.setState(newState);\n         \n        }\n        else if (response.data.code === 204) {\n          console.log(\"Servie not updated\");\n          alert(\"Servie not updated\")\n        }\n\n      })\n      .catch(function (error) {\n\n        console.log(error);\n      });\n\n  };\n  render() {\n\n    var info = this.state.jobsdata;\n    var keys = this.getKeys();\n\n    var items = info.map((row, index) => {\n\n\n      return <tr key={index}><RenderRow key={index} data={row} keys={keys} />\n        <td><button onClick={() => this.handleClick(index)}>Accept</button>\n        </td>\n      </tr>\n    })\n\n\n    return (\n      <div>\n        <div className=\"bookingslist\">\n          <h3>Service Available</h3>\n          <table>\n            <thead>\n              <tr>{this.getHeader()}</tr>\n\n            </thead>\n            <tbody>\n              {items}\n            </tbody>\n          </table>\n        </div>\n\n      </div>\n    );\n  }\n}\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}