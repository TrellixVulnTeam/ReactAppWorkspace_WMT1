{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\BITS\\\\Web development\\\\CodeBase\\\\ReactAppWorkspace\\\\src\\\\components\\\\Login.js\";\nimport React from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { setUserSession } from './Common';\nimport './Login.css';\nimport { FormErrors } from './FormErrors';\nimport axios from 'axios';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUserInput = e => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState({\n        [name]: value\n      }, () => {\n        this.validateField(name, value);\n      });\n    };\n\n    this.handleSubmit = e => {\n      var self = this;\n      var username = this.state.email.substring(0, this.state.email.indexOf('@')); // var data = JSON.stringify({\"email\":this.state.email,\"password\":this.state.password,\"usertype\":this.state.UserType});\n      // var config = {\n      //   method: 'get',\n      //   url: 'http://127.0.0.1:8000/api/checkUserValid',\n      //   headers: { \n      //     'Authorization': 'Basic YWRtaW46MTIz', \n      //     'Content-Type': 'application/json'\n      //   },\n      //   data : data\n      // };\n\n      if (self.state.UserType === 'faculty') {\n        var myHeaders = new Headers();\n        myHeaders.append(\"Authorization\", \"Basic YWRtaW46MTIz\");\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        var raw = JSON.stringify({\n          \"email\": \"karthikeyan@gmail.com\",\n          \"password\": \"karthi24\",\n          \"usertype\": \"faculty\"\n        });\n        var requestOptions = {\n          method: 'GET',\n          headers: myHeaders,\n          body: raw,\n          redirect: 'follow'\n        };\n        fetch(\"http://127.0.0.1:8000/api/checkUserValid\", requestOptions).then(response => response.text()).then(result => {\n          console.log(result);\n\n          if (result.status === 200) {\n            self.setState({\n              user: username\n            }, () => {\n              setUserSession(self.state.email, username, self.state.UserType);\n              alert(\"Login Successful!\");\n              self.props.history.push('/LMS/dashboardF');\n            });\n          }\n        }).catch(error => console.log('error', error)); // axios(config).then(function (response) {\n        //   console.log(JSON.stringify(response.data));\n        //   if (response.status === 200) {\n        //     self.setState({user:username}, () => {\n        //       setUserSession(self.state.email, username, self.state.UserType);\n        //       alert(\"Login Successful!\");\n        //       self.props.history.push('/LMS/dashboardF');\n        // });\n        //   }\n        // })\n        // .catch(function (error) {\n        //   console.log(error);\n        //   console.log(\"Invalid Username and Password!\");\n        //   alert(\"Invalid Username and Password!\");\n        // });\n      } else {\n        alert(\"Student Dashboard not available!\");\n      } // var apiBaseUrl = \"http://127.0.0.1:8000/api/appUsers/\";\n      // var self = this;\n      // var payload = {\n      //   \"email\": this.state.email,\n      //   \"password\": this.state.password,\n      //   \"usertype\": this.state.UserType\n      // }\n      // var username = this.state.email.substring(0,this.state.email.indexOf('@'));\n      // axios.get(apiBaseUrl,payload,\n      //   {auth: {\n      //     username: 'admin',\n      //     password: '123'\n      //   }})\n      //   .then(function (response) {\n      //     if (response.status === 200) {\n      //       self.setState({user:username}, () => {\n      //         setUserSession(self.state.email, username, self.state.UserType);\n      //         alert(\"Login Successful!\");\n      //         if (self.state.UserType ==='faculty') {\n      //         self.props.history.push('/LMS/dashboardF');\n      //     } else {\n      //       alert(\"Student Dashboard not available!\");\n      //     }\n      //   });\n      //     }\n      //   }).catch(function (error) {\n      //   });\n      //    e.preventDefault();    \n\n    };\n\n    this.state = {\n      user: '',\n      email: '',\n      password: '',\n      UserType: '',\n      emailErrorMsg: {\n        email: ''\n      },\n      passwordErrorMsg: {\n        password: ''\n      },\n      emailValid: false,\n      passwordValid: false,\n      userTypeValid: false,\n      loginButtonEnable: false\n    };\n  }\n\n  validateField(fieldName, value) {\n    // let fieldValidationErrors = this.state.formErrors;\n    let emailValidationErrorMsg = this.state.emailErrorMsg;\n    let passwordValidationErrorMsg = this.state.passwordErrorMsg;\n    let emailValid = this.state.emailValid;\n    let passwordValid = this.state.passwordValid;\n    let userTypeValid = this.state.userTypeValid; //let userTypeValue = this.state.UserType;\n\n    switch (fieldName) {\n      case 'email':\n        if (value.length === 0) {\n          emailValid = false;\n          emailValidationErrorMsg.email = '';\n        } else if (value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,3})$/i)) {\n          emailValid = true;\n          emailValidationErrorMsg.email = '';\n        } else {\n          emailValid = false;\n          emailValidationErrorMsg.email = ' is invalid';\n        }\n\n        break;\n\n      case 'password':\n        if (value.length > 0 && value.length < 6) {\n          passwordValid = false;\n          passwordValidationErrorMsg.password = ' length is less than 6';\n        } else if (value.length > 10) {\n          passwordValid = false;\n          passwordValidationErrorMsg.password = ' accepts max 10';\n        } else if (value.length === 0) {\n          passwordValid = false;\n          passwordValidationErrorMsg.password = '';\n        } else {\n          passwordValid = true;\n          passwordValidationErrorMsg.password = '';\n        }\n\n        break;\n\n      default:\n        // radio button selection for user selection\n        userTypeValid = true; //userTypeValue = value;\n\n        break;\n    }\n\n    this.setState({\n      emailErrorMsg: emailValidationErrorMsg,\n      passwordErrorMsg: passwordValidationErrorMsg,\n      emailValid: emailValid,\n      passwordValid: passwordValid,\n      userTypeValid: userTypeValid\n    }, this.loginForm);\n  }\n\n  loginForm() {\n    this.setState({\n      loginButtonEnable: this.state.emailValid && this.state.passwordValid && this.state.userTypeValid\n    });\n  }\n\n  errorClass(error) {\n    return error.length === 0 ? '' : 'has-error';\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"demoForm\",\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              required: true,\n              name: \"email\",\n              placeholder: \"Email\",\n              value: this.state.email,\n              onChange: this.handleUserInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: /*#__PURE__*/_jsxDEV(FormErrors, {\n              formErrors: this.state.emailErrorMsg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              placeholder: \"Password\",\n              value: this.state.password,\n              onChange: this.handleUserInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: /*#__PURE__*/_jsxDEV(FormErrors, {\n              formErrors: this.state.passwordErrorMsg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: \"student\",\n              name: \"UserType\",\n              checked: this.state.UserType === \"student\",\n              onChange: this.handleUserInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"Student\",\n              children: \"Student\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: \"faculty\",\n              name: \"UserType\",\n              checked: this.state.UserType === \"faculty\",\n              onChange: this.handleUserInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"Faculty\",\n              children: \"Faculty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"register-menu\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/LMS/registration\",\n              children: \"New User? Click Here To Register!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Login\",\n            disabled: !this.state.loginButtonEnable\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["D:/BITS/Web development/CodeBase/ReactAppWorkspace/src/components/Login.js"],"names":["React","Redirect","withRouter","setUserSession","FormErrors","axios","Login","Component","constructor","props","handleUserInput","e","name","target","value","setState","validateField","handleSubmit","self","username","state","email","substring","indexOf","UserType","myHeaders","Headers","append","raw","JSON","stringify","requestOptions","method","headers","body","redirect","fetch","then","response","text","result","console","log","status","user","alert","history","push","catch","error","password","emailErrorMsg","passwordErrorMsg","emailValid","passwordValid","userTypeValid","loginButtonEnable","fieldName","emailValidationErrorMsg","passwordValidationErrorMsg","length","match","loginForm","errorClass","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { setUserSession } from './Common';\nimport './Login.css';\nimport { FormErrors } from './FormErrors';\nimport axios from 'axios';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: '',\n      email: '',\n      password: '',\n      UserType: '',\n      emailErrorMsg:{ email: ''},\n      passwordErrorMsg:{ password: ''},\n      emailValid: false,\n      passwordValid: false,\n      userTypeValid:false,\n      loginButtonEnable: false,\n    }\n    \n  }\n\n  handleUserInput = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({ [name]: value },\n      () => { this.validateField(name, value) });\n  }\n\n   validateField(fieldName, value) {\n    // let fieldValidationErrors = this.state.formErrors;\n    let emailValidationErrorMsg = this.state.emailErrorMsg;\n    let passwordValidationErrorMsg = this.state.passwordErrorMsg;\n    let emailValid = this.state.emailValid;\n    let passwordValid = this.state.passwordValid;\n    let userTypeValid = this.state.userTypeValid;\n    //let userTypeValue = this.state.UserType;\n\n\n    switch (fieldName) {\n      case 'email':\n        if (value.length===0) {\n          emailValid = false;\n          emailValidationErrorMsg.email = '';\n        } else if (value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,3})$/i)) {\n          emailValid = true;\n          emailValidationErrorMsg.email = '';\n        } else {\n          emailValid = false;\n          emailValidationErrorMsg.email = ' is invalid';\n        }\n        break;\n      case 'password':\n        if (value.length > 0 && value.length < 6) {\n          passwordValid=false;\n          passwordValidationErrorMsg.password = ' length is less than 6';\n        } else if (value.length > 10) {\n          passwordValid=false;\n          passwordValidationErrorMsg.password = ' accepts max 10';\n        } else if (value.length===0) {\n          passwordValid=false;\n          passwordValidationErrorMsg.password ='';\n        } else {\n          passwordValid=true;\n          passwordValidationErrorMsg.password ='';\n        }\n        break;\n      default:\n        // radio button selection for user selection\n        userTypeValid = true;\n        //userTypeValue = value;\n        break;\n    }\n    this.setState({\n      emailErrorMsg: emailValidationErrorMsg,\n      passwordErrorMsg: passwordValidationErrorMsg,\n      emailValid: emailValid,\n      passwordValid: passwordValid,\n      userTypeValid: userTypeValid\n    }, this.loginForm);\n  }\n\n  loginForm() {\n    this.setState({ loginButtonEnable: this.state.emailValid && this.state.passwordValid && this.state.userTypeValid });\n  }\n\n  errorClass(error) {\n    return (error.length === 0 ? '' : 'has-error');\n  }\n\n  \nhandleSubmit = (e) => {\nvar self = this;\nvar username = this.state.email.substring(0,this.state.email.indexOf('@'));\n// var data = JSON.stringify({\"email\":this.state.email,\"password\":this.state.password,\"usertype\":this.state.UserType});\n// var config = {\n//   method: 'get',\n//   url: 'http://127.0.0.1:8000/api/checkUserValid',\n//   headers: { \n//     'Authorization': 'Basic YWRtaW46MTIz', \n//     'Content-Type': 'application/json'\n//   },\n//   data : data\n// };\nif (self.state.UserType ==='faculty') {\n  var myHeaders = new Headers();\n  myHeaders.append(\"Authorization\", \"Basic YWRtaW46MTIz\");\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  \n  var raw = JSON.stringify({\"email\":\"karthikeyan@gmail.com\",\"password\":\"karthi24\",\"usertype\":\"faculty\"});\n  \n  var requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow'\n  };\n  \n  fetch(\"http://127.0.0.1:8000/api/checkUserValid\", requestOptions)\n    .then(response => response.text())\n    .then(result => {\n      console.log(result);\n      if (result.status === 200) {\n    self.setState({user:username}, () => {\n      \n      setUserSession(self.state.email, username, self.state.UserType);\n      alert(\"Login Successful!\");\n      \n      self.props.history.push('/LMS/dashboardF');\n    })\n  }\n  })\n    .catch(error => console.log('error', error));\n// axios(config).then(function (response) {\n//   console.log(JSON.stringify(response.data));\n//   if (response.status === 200) {\n//     self.setState({user:username}, () => {\n      \n//       setUserSession(self.state.email, username, self.state.UserType);\n//       alert(\"Login Successful!\");\n      \n//       self.props.history.push('/LMS/dashboardF');\n  \n// });\n\n//   }\n// })\n// .catch(function (error) {\n//   console.log(error);\n//   console.log(\"Invalid Username and Password!\");\n//   alert(\"Invalid Username and Password!\");\n// });\n} else {\n  alert(\"Student Dashboard not available!\");\n}\n\n    // var apiBaseUrl = \"http://127.0.0.1:8000/api/appUsers/\";\n    // var self = this;\n    // var payload = {\n    //   \"email\": this.state.email,\n    //   \"password\": this.state.password,\n    //   \"usertype\": this.state.UserType\n    // }\n    // var username = this.state.email.substring(0,this.state.email.indexOf('@'));\n\n    // axios.get(apiBaseUrl,payload,\n    //   {auth: {\n    //     username: 'admin',\n    //     password: '123'\n    //   }})\n    //   .then(function (response) {\n       \n    //     if (response.status === 200) {\n    //       self.setState({user:username}, () => {\n    //         setUserSession(self.state.email, username, self.state.UserType);\n    //         alert(\"Login Successful!\");\n    //         if (self.state.UserType ==='faculty') {\n    //         self.props.history.push('/LMS/dashboardF');\n    //     } else {\n    //       alert(\"Student Dashboard not available!\");\n    //     }\n    //   });\n\n    //     }\n    //   }).catch(function (error) {\n        \n    //   });\n    //    e.preventDefault();    \n  }\n\n  render() {\n    return (\n      <div className=\"loginContainer\">\n        <div className=\"login-menu\">\n         <h1>Sign In</h1> \n          <form className=\"demoForm\" onSubmit={this.handleSubmit}>\n         \n            <div >\n              <input type=\"email\" required name=\"email\"\n                placeholder=\"Email\"\n                value={this.state.email}\n                onChange={this.handleUserInput} />\n            </div>\n            <div className='error-message' >\n              <FormErrors formErrors={this.state.emailErrorMsg} />\n            </div>\n            <div >\n              <input type=\"password\" name=\"password\"\n                placeholder=\"Password\"\n                value={this.state.password}\n                onChange={this.handleUserInput} />\n            </div>\n            <div className='error-message' >\n              <FormErrors formErrors={this.state.passwordErrorMsg} />\n            </div>\n            <div >\n              <input type=\"radio\" value=\"student\" name=\"UserType\"\n                checked={this.state.UserType === \"student\"}\n                onChange={this.handleUserInput} />\n              <label htmlFor=\"Student\">Student</label>\n              <input type=\"radio\" value=\"faculty\" name=\"UserType\" checked={this.state.UserType === \"faculty\"}\n                onChange={this.handleUserInput} />\n              <label htmlFor=\"Faculty\">Faculty</label>\n            </div>\n            <div className=\"register-menu\">\n            \n              <a href='/LMS/registration'>New User? Click Here To Register!</a>\n          \n          </div>\n            <input type='submit' value='Login' disabled={!this.state.loginButtonEnable} />\n          </form>\n          </div>  \n      </div>\n    )\n  }\n\n}\nexport default withRouter(Login);\n"]},"metadata":{},"sourceType":"module"}